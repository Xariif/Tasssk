import*as e from"react";import{Tooltip as t}from"primereact/tooltip";import{ObjectUtils as o,classNames as r,DomHandler as n}from"primereact/utils";function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},l.apply(this,arguments)}var a=e.memo(e.forwardRef((function(i,u){var s=e.useRef(u),p=e.useRef(0),c=function(e){var t=s.current;t&&n.isVisible(t)&&(p.current||(p.current=t.scrollHeight,t.style.overflow="hidden"),(p.current!==t.scrollHeight||e)&&(t.style.height="",t.style.height=t.scrollHeight+"px",parseFloat(t.style.height)>=parseFloat(t.style.maxHeight)?(t.style.overflowY="scroll",t.style.height=t.style.maxHeight):t.style.overflow="hidden",p.current=t.scrollHeight))},f=s.current&&s.current.value,m=e.useMemo((function(){return o.isNotEmpty(i.value)||o.isNotEmpty(i.defaultValue)||o.isNotEmpty(f)}),[i.value,i.defaultValue,f]);e.useEffect((function(){o.combinedRefs(s,u)}),[s,u]),e.useEffect((function(){i.autoResize&&c(!0)}),[i.autoResize]);var y=o.isNotEmpty(i.tooltip),d=o.findDiffKeys(i,a.defaultProps),h=r("p-inputtextarea p-inputtext p-component",{"p-disabled":i.disabled,"p-filled":m,"p-inputtextarea-resizable":i.autoResize},i.className);return e.createElement(e.Fragment,null,e.createElement("textarea",l({ref:s},d,{className:h,onFocus:function(e){i.autoResize&&c(),i.onFocus&&i.onFocus(e)},onBlur:function(e){i.autoResize&&c(),i.onBlur&&i.onBlur(e)},onKeyUp:function(e){i.autoResize&&c(),i.onKeyUp&&i.onKeyUp(e)},onInput:function(e){i.autoResize&&c(),i.onInput&&i.onInput(e);var t=e.target;o.isNotEmpty(t.value)?n.addClass(t,"p-filled"):n.removeClass(t,"p-filled")}})),y&&e.createElement(t,l({target:s,content:i.tooltip},i.tooltipOptions)))})));a.displayName="InputTextarea",a.defaultProps={__TYPE:"InputTextarea",autoResize:!1,tooltip:null,tooltipOptions:null,onInput:null};export{a as InputTextarea};
