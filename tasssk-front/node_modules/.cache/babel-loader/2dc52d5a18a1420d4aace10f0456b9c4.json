{"ast":null,"code":"var _jsxFileName = \"/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { GetLists } from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  _s();\n\n  const toastRef = useToastContext();\n  const [loading, setLoading] = useState(true);\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n  const [listNames, setListNames] = useState([]);\n  const [list, setList] = useState([]);\n  const [state, dispatch] = useReducer(listsActions, selectedList);\n\n  function listsActions(state, action) {\n    switch (action.type) {\n      case \"DeleteFile\":\n        setSelectedList(prev => ({ ...prev,\n          files: prev.files.filter(x => x.fileId != action.fileId)\n        }));\n        break;\n\n      case \"AddFile\":\n        setSelectedList(prev => ({ ...prev,\n          files: prev.files.concat(action.filesArr)\n        }));\n        break;\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ToDoList\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          fetchData: fetchData,\n          lists: lists,\n          selectedList: selectedList,\n          setSelectedList: setSelectedList,\n          dispatch: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(List, \"+tYAgJl4PY1Ptj29weTiei/OOaY=\", false, function () {\n  return [useToastContext, useLocalStorage];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","GetLists","Table","Bar","useToastContext","Spinner","useLocalStorage","List","props","toastRef","loading","setLoading","listStorage","setListStorage","listNames","setListNames","list","setList","state","dispatch","listsActions","selectedList","action","type","setSelectedList","prev","files","filter","x","fileId","concat","filesArr","fetchData","lists"],"sources":["/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport { GetLists } from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\n\nconst List = (props) => {\n  const toastRef = useToastContext();\n  const [loading, setLoading] = useState(true);\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n\n  const [listNames, setListNames] = useState([]);\n  const [list, setList] = useState([]);\n\n  const [state, dispatch] = useReducer(listsActions, selectedList);\n  function listsActions(state, action) {\n    switch (action.type) {\n      case \"DeleteFile\":\n        setSelectedList((prev) => ({\n          ...prev,\n          files: prev.files.filter((x) => x.fileId != action.fileId),\n        }));\n        break;\n\n      case \"AddFile\":\n        setSelectedList((prev) => ({\n          ...prev,\n          files: prev.files.concat(action.filesArr),\n        }));\n        break;\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div className=\"ToDoList\">\n        <>\n          <Bar\n            fetchData={fetchData}\n            lists={lists}\n            selectedList={selectedList}\n            setSelectedList={setSelectedList}\n            dispatch={dispatch}\n          />\n        </>\n      </div>\n    );\n  }\n};\n\nexport default List;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,QAAQ,GAAGL,eAAe,EAAhC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCP,eAAe,CAAC,cAAD,CAArD;EAEA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBnB,UAAU,CAACoB,YAAD,EAAeC,YAAf,CAApC;;EACA,SAASD,YAAT,CAAsBF,KAAtB,EAA6BI,MAA7B,EAAqC;IACnC,QAAQA,MAAM,CAACC,IAAf;MACE,KAAK,YAAL;QACEC,eAAe,CAAEC,IAAD,KAAW,EACzB,GAAGA,IADsB;UAEzBC,KAAK,EAAED,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACC,MAAF,IAAYP,MAAM,CAACO,MAA5C;QAFkB,CAAX,CAAD,CAAf;QAIA;;MAEF,KAAK,SAAL;QACEL,eAAe,CAAEC,IAAD,KAAW,EACzB,GAAGA,IADsB;UAEzBC,KAAK,EAAED,IAAI,CAACC,KAAL,CAAWI,MAAX,CAAkBR,MAAM,CAACS,QAAzB;QAFkB,CAAX,CAAD,CAAf;QAIA;IAbJ;EAeD;;EAEDhC,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,IAAD,CAAV;IACAqB,SAAS;EACV,CAHQ,EAGN,EAHM,CAAT;;EAKA,IAAItB,OAAJ,EAAa;IACX,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO;IACL,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE;QAAA,uBACE,QAAC,GAAD;UACE,SAAS,EAAEsB,SADb;UAEE,KAAK,EAAEC,KAFT;UAGE,YAAY,EAAEZ,YAHhB;UAIE,eAAe,EAAEG,eAJnB;UAKE,QAAQ,EAAEL;QALZ;UAAA;UAAA;UAAA;QAAA;MADF;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;AACF,CAjDD;;GAAMZ,I;UACaH,e,EAEqBE,e;;;KAHlCC,I;AAmDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}