{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport default function useLocalStorage(key, defaultValue) {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    const item = localStorage.getItem(key);\n    return item ? item : defaultValue;\n  });\n\n  const setValue = value => {\n    localStorage.setItem(key, value);\n  };\n\n  return [storedValue, setValue];\n}\n\n_s(useLocalStorage, \"Ue7mU2SVKmL6D9jILl/qwBFDycY=\");","map":{"version":3,"names":["useState","useEffect","useLocalStorage","key","defaultValue","storedValue","setStoredValue","item","localStorage","getItem","setValue","value","setItem"],"sources":["C:/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    const item = localStorage.getItem(key);\r\n    return item ? item : defaultValue;\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    localStorage.setItem(key, value);\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;EAAA;;EACzD,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,MAAM;IACnD,MAAMO,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAb;IACA,OAAOI,IAAI,GAAGA,IAAH,GAAUH,YAArB;EACD,CAH6C,CAA9C;;EAKA,MAAMM,QAAQ,GAAIC,KAAD,IAAW;IAC1BH,YAAY,CAACI,OAAb,CAAqBT,GAArB,EAA0BQ,KAA1B;EACD,CAFD;;EAIA,OAAO,CAACN,WAAD,EAAcK,QAAd,CAAP;AACD;;GAXuBR,e"},"metadata":{},"sourceType":"module"}