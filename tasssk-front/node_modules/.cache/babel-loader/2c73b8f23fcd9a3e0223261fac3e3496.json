{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakub\\\\Documents\\\\GitHub\\\\To-Do\\\\to-do-front\\\\src\\\\components\\\\auth\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Password } from \"primereact/password\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Divider } from \"primereact/divider\";\nimport { classNames } from \"primereact/utils\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport { RegisterUser } from \"../../../services/UserService\";\nimport \"./Register.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({});\n  const toast = useToastContext();\n  const sub = false;\n  const navigate = useNavigate();\n\n  const validate = data => {\n    let errors = {};\n\n    if (!data.email) {\n      errors.email = \"Email is required.\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\n      errors.email = \"Invalid email address. E.g. example@email.com\";\n    }\n\n    if (data.password !== data.repassword) {\n      errors.password = \"Passwords are diffrent.\";\n      errors.repassword = \"Passwords are diffrent.\";\n    }\n\n    if (!data.password) {\n      errors.password = \"Password is required.\";\n    }\n\n    if (!data.repassword) {\n      errors.repassword = \"Re-type Password is required.\";\n    }\n\n    if (!data.accept) {\n      errors.accept = \"You need to agree to the terms and conditions.\";\n    }\n\n    if (!data.birthDate) {\n      errors.birthDate = \"Birhday is required.\";\n    }\n\n    if (data.birthDate > new Date().setFullYear(new Date().getFullYear() - 18)) {\n      errors.birthDate = \"You are to young.\";\n    }\n\n    return errors;\n  };\n\n  const onSubmit = async (data, form) => {\n    try {\n      await RegisterUser(data).then(res => {\n        toast.current.show({\n          severity: \"success\",\n          summary: \"Success \",\n          detail: res,\n          life: 5000\n        });\n        form.restart();\n        navigate(\"/Login\");\n      });\n    } catch (error) {\n      toast.current.show({\n        severity: \"error\",\n        summary: \"Error\",\n        detail: error.code,\n        life: 5000\n      });\n    }\n  };\n\n  const isFormFieldValid = meta => !!(meta.touched && meta.error);\n\n  const getFormErrorMessage = meta => {\n    return isFormFieldValid(meta) && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }, this);\n  };\n\n  const passwordHeader = /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: \"Pick a password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 26\n  }, this);\n\n  const passwordFooter = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2\",\n      children: \"Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pl-2 ml-2 mt-0\",\n      style: {\n        lineHeight: \"1.5\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Minimum 8 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Card\",\n        style: {\n          border: \"1px solid var(--text-color) \",\n          borderRadius: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n            fontSize: \"1.5rem\"\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmit,\n          initialValues: {\n            email: \"\",\n            password: \"\",\n            repassword: \"\",\n            birthDate: \"\",\n            accept: false\n          },\n          validate: validate,\n          render: _ref => {\n            let {\n              handleSubmit\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"p-fluid\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                render: _ref2 => {\n                  let {\n                    input,\n                    meta\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-float-label p-input-icon-right\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"pi pi-envelope\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n                        id: \"email\",\n                        ...input,\n                        className: classNames({\n                          \"p-invalid\": isFormFieldValid(meta)\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"email\",\n                        className: classNames({\n                          \"p-error\": isFormFieldValid(meta)\n                        }),\n                        children: \"Email*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 23\n                    }, this), getFormErrorMessage(meta)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                render: _ref3 => {\n                  let {\n                    input,\n                    meta\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-float-label\",\n                      children: [/*#__PURE__*/_jsxDEV(Password, {\n                        id: \"password\",\n                        ...input,\n                        toggleMask: true,\n                        className: classNames({\n                          \"p-invalid\": isFormFieldValid(meta)\n                        }),\n                        header: passwordHeader,\n                        footer: passwordFooter\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"password\",\n                        className: classNames({\n                          \"p-error\": isFormFieldValid(meta)\n                        }),\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 23\n                    }, this), getFormErrorMessage(meta)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"repassword\",\n                render: _ref4 => {\n                  let {\n                    input,\n                    meta\n                  } = _ref4;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-float-label\",\n                      children: [/*#__PURE__*/_jsxDEV(Password, {\n                        id: \"repassword\",\n                        ...input,\n                        toggleMask: true,\n                        className: classNames({\n                          \"p-invalid\": isFormFieldValid(meta)\n                        }),\n                        header: passwordHeader,\n                        footer: passwordFooter\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"repassword\",\n                        className: classNames({\n                          \"p-error\": isFormFieldValid(meta)\n                        }),\n                        children: \"Re-type Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), getFormErrorMessage(meta)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"birthDate\",\n                render: _ref5 => {\n                  let {\n                    input,\n                    meta\n                  } = _ref5;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-float-label\",\n                      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                        panelStyle: {\n                          padding: \"0px\"\n                        },\n                        id: \"birthDate\",\n                        ...input,\n                        dateFormat: \"dd/mm/yy\",\n                        mask: \"99/99/9999\",\n                        showIcon: true,\n                        className: classNames({\n                          \"p-invalid\": isFormFieldValid(meta)\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"date\",\n                        children: \"Birthday\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 23\n                    }, this), getFormErrorMessage(meta)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                target: \".termsTip\",\n                position: \"bottom\",\n                style: {\n                  maxWidth: \"400px\"\n                },\n                children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus eget est tellus. Mauris cursus leo quis mi congue faucibus. Donec aliquam condimentum elementum. Quisque porta lacus a mi rutrum consectetur. Aliquam pretium tincidunt dolor, efficitur placerat purus lacinia lacinia. Donec fringilla posuere luctus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Phasellus nulla sapien, commodo sit amet volutpat at, viverra a sapien. Aliquam vitae consectetur nunc. Fusce fermentum quam a tincidunt sodales. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent ac dolor sagittis dui sodales faucibus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ex mi, iaculis sed libero nec, scelerisque tincidunt dolor.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"accept\",\n                type: \"checkbox\",\n                render: _ref6 => {\n                  let {\n                    input,\n                    meta\n                  } = _ref6;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      margin: \"1rem 0\"\n                    },\n                    className: \"termsTip\",\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      inputId: \"accept\",\n                      ...input,\n                      className: classNames({\n                        \"p-invalid\": isFormFieldValid(meta)\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 23\n                    }, this), \" \", \"I agree to the terms and conditions*\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 23\n                    }, this), getFormErrorMessage(meta)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                label: \"Submit\",\n                className: \"mt-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), \"Log in\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Login\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: \"here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"Cvmr36Iw2RkHlqMO098tk62ZmoU=\", false, function () {\n  return [useToastContext, useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useRef","Link","useNavigate","Form","Field","InputText","Button","Calendar","Password","Checkbox","Divider","classNames","Tooltip","useToastContext","RegisterUser","Register","formData","setFormData","toast","sub","navigate","validate","data","errors","email","test","password","repassword","accept","birthDate","Date","setFullYear","getFullYear","onSubmit","form","then","res","current","show","severity","summary","detail","life","restart","error","code","isFormFieldValid","meta","touched","getFormErrorMessage","passwordHeader","passwordFooter","lineHeight","border","borderRadius","textAlign","fontWeight","fontSize","handleSubmit","input","padding","maxWidth","margin","marginTop","textDecoration"],"sources":["C:/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/auth/Register/Register.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\n\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { Password } from \"primereact/password\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\nimport { Divider } from \"primereact/divider\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport { Tooltip } from \"primereact/tooltip\";\r\nimport { useToastContext } from \"../../../context/ToastContext\";\r\nimport { RegisterUser } from \"../../../services/UserService\";\r\n\r\nimport \"./Register.scss\";\r\n\r\nexport const Register = () => {\r\n  const [formData, setFormData] = useState({});\r\n  const toast = useToastContext();\r\n  const sub = false;\r\n  const navigate = useNavigate();\r\n  const validate = (data) => {\r\n    let errors = {};\r\n\r\n    if (!data.email) {\r\n      errors.email = \"Email is required.\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n      errors.email = \"Invalid email address. E.g. example@email.com\";\r\n    }\r\n\r\n    if (data.password !== data.repassword) {\r\n      errors.password = \"Passwords are diffrent.\";\r\n      errors.repassword = \"Passwords are diffrent.\";\r\n    }\r\n\r\n    if (!data.password) {\r\n      errors.password = \"Password is required.\";\r\n    }\r\n    if (!data.repassword) {\r\n      errors.repassword = \"Re-type Password is required.\";\r\n    }\r\n\r\n    if (!data.accept) {\r\n      errors.accept = \"You need to agree to the terms and conditions.\";\r\n    }\r\n\r\n    if (!data.birthDate) {\r\n      errors.birthDate = \"Birhday is required.\";\r\n    }\r\n\r\n    if (\r\n      data.birthDate > new Date().setFullYear(new Date().getFullYear() - 18)\r\n    ) {\r\n      errors.birthDate = \"You are to young.\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const onSubmit = async (data, form) => {\r\n    try {\r\n      await RegisterUser(data).then((res) => {\r\n        toast.current.show({\r\n          severity: \"success\",\r\n          summary: \"Success \",\r\n          detail: res,\r\n          life: 5000,\r\n        });\r\n        form.restart();\r\n        navigate(\"/Login\");\r\n      });\r\n    } catch (error) {\r\n      toast.current.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: error.code,\r\n        life: 5000,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isFormFieldValid = (meta) => !!(meta.touched && meta.error);\r\n  const getFormErrorMessage = (meta) => {\r\n    return (\r\n      isFormFieldValid(meta) && <small className=\"p-error\">{meta.error}</small>\r\n    );\r\n  };\r\n\r\n  const passwordHeader = <h6>Pick a password</h6>;\r\n  const passwordFooter = (\r\n    <>\r\n      <Divider />\r\n      <p className=\"mt-2\">Suggestions</p>\r\n      <ul className=\"pl-2 ml-2 mt-0\" style={{ lineHeight: \"1.5\" }}>\r\n        <li>At least one lowercase</li>\r\n        <li>At least one uppercase</li>\r\n        <li>At least one numeric</li>\r\n        <li>Minimum 8 characters</li>\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <div className=\"flex justify-content-center\">\r\n        <div\r\n          className=\"Card\"\r\n          style={{\r\n            border: \"1px solid var(--text-color) \",\r\n            borderRadius: \"20px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"1.5rem\",\r\n            }}\r\n          >\r\n            Register\r\n          </div>\r\n\r\n          <Form\r\n            onSubmit={onSubmit}\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n              repassword: \"\",\r\n              birthDate: \"\",\r\n              accept: false,\r\n            }}\r\n            validate={validate}\r\n            render={({ handleSubmit }) => (\r\n              <form onSubmit={handleSubmit} className=\"p-fluid\">\r\n                <Field\r\n                  name=\"email\"\r\n                  render={({ input, meta }) => (\r\n                    <div className=\"field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <i className=\"pi pi-envelope\" />\r\n                        <InputText\r\n                          id=\"email\"\r\n                          {...input}\r\n                          className={classNames({\r\n                            \"p-invalid\": isFormFieldValid(meta),\r\n                          })}\r\n                        />\r\n                        <label\r\n                          htmlFor=\"email\"\r\n                          className={classNames({\r\n                            \"p-error\": isFormFieldValid(meta),\r\n                          })}\r\n                        >\r\n                          Email*\r\n                        </label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"password\"\r\n                  render={({ input, meta }) => (\r\n                    <div className=\"field\">\r\n                      <span className=\"p-float-label\">\r\n                        <Password\r\n                          id=\"password\"\r\n                          {...input}\r\n                          toggleMask\r\n                          className={classNames({\r\n                            \"p-invalid\": isFormFieldValid(meta),\r\n                          })}\r\n                          header={passwordHeader}\r\n                          footer={passwordFooter}\r\n                        />\r\n                        <label\r\n                          htmlFor=\"password\"\r\n                          className={classNames({\r\n                            \"p-error\": isFormFieldValid(meta),\r\n                          })}\r\n                        >\r\n                          Password\r\n                        </label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"repassword\"\r\n                  render={({ input, meta }) => (\r\n                    <div className=\"field\">\r\n                      <span className=\"p-float-label\">\r\n                        <Password\r\n                          id=\"repassword\"\r\n                          {...input}\r\n                          toggleMask\r\n                          className={classNames({\r\n                            \"p-invalid\": isFormFieldValid(meta),\r\n                          })}\r\n                          header={passwordHeader}\r\n                          footer={passwordFooter}\r\n                        />\r\n                        <label\r\n                          htmlFor=\"repassword\"\r\n                          className={classNames({\r\n                            \"p-error\": isFormFieldValid(meta),\r\n                          })}\r\n                        >\r\n                          Re-type Password\r\n                        </label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"birthDate\"\r\n                  render={({ input, meta }) => (\r\n                    <div className=\"field\">\r\n                      <span className=\"p-float-label\">\r\n                        <Calendar\r\n                          panelStyle={{ padding: \"0px\" }}\r\n                          id=\"birthDate\"\r\n                          {...input}\r\n                          dateFormat=\"dd/mm/yy\"\r\n                          mask=\"99/99/9999\"\r\n                          showIcon\r\n                          className={classNames({\r\n                            \"p-invalid\": isFormFieldValid(meta),\r\n                          })}\r\n                        />\r\n                        <label htmlFor=\"date\">Birthday</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Tooltip\r\n                  target=\".termsTip\"\r\n                  position=\"bottom\"\r\n                  style={{ maxWidth: \"400px\" }}\r\n                >\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Phasellus eget est tellus. Mauris cursus leo quis mi congue\r\n                  faucibus. Donec aliquam condimentum elementum. Quisque porta\r\n                  lacus a mi rutrum consectetur. Aliquam pretium tincidunt\r\n                  dolor, efficitur placerat purus lacinia lacinia. Donec\r\n                  fringilla posuere luctus. Interdum et malesuada fames ac ante\r\n                  ipsum primis in faucibus. Phasellus nulla sapien, commodo sit\r\n                  amet volutpat at, viverra a sapien. Aliquam vitae consectetur\r\n                  nunc. Fusce fermentum quam a tincidunt sodales. Lorem ipsum\r\n                  dolor sit amet, consectetur adipiscing elit. Praesent ac dolor\r\n                  sagittis dui sodales faucibus. Lorem ipsum dolor sit amet,\r\n                  consectetur adipiscing elit. Nam ex mi, iaculis sed libero\r\n                  nec, scelerisque tincidunt dolor.\r\n                </Tooltip>\r\n                <Field\r\n                  name=\"accept\"\r\n                  type=\"checkbox\"\r\n                  render={({ input, meta }) => (\r\n                    <div style={{ margin: \"1rem 0\" }} className=\"termsTip\">\r\n                      <Checkbox\r\n                        inputId=\"accept\"\r\n                        {...input}\r\n                        className={classNames({\r\n                          \"p-invalid\": isFormFieldValid(meta),\r\n                        })}\r\n                      />{\" \"}\r\n                      I agree to the terms and conditions*\r\n                      <br />\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n              </form>\r\n            )}\r\n          />\r\n          <div style={{ marginTop: \"1rem\" }}>\r\n            Already have an account?\r\n            <br />\r\n            Log in{\" \"}\r\n            <Link to=\"/Login\" style={{ textDecoration: \"none\" }}>\r\n              here!\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}