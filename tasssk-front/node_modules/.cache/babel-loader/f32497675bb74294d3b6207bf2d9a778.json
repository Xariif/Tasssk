{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakub\\\\Documents\\\\GitHub\\\\To-Do\\\\to-do-front\\\\src\\\\components\\\\pages\\\\Events\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport { useEffect } from \"react\";\nimport \"./Events.scss\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\nimport { GetEvents } from \"../../../services/EventService\";\nimport Spinner from \"./../../../UI/Spinner\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Events() {\n  _s();\n\n  const toastRef = useToastContext();\n  const navigate = useNavigate();\n\n  const moment = require(\"moment\");\n\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n  const [Events, setEvents] = useState();\n  useEffect(() => {\n    const fetchData = () => {\n      GetEvents().then(res => {\n        setEvents(res.data.map(x => ({\n          title: x.name,\n          date: moment(x.date).format(\"HH:mm:ss\") === \"00:00:00\" ? moment(x.date).format(\"YYYY-MM-DD\") : moment(x.date).format(\"YYYY-MM-DD HH:mm\"),\n          id: x.listId\n        })));\n      }).catch(err => {\n        toastRef.current.show({\n          severity: \"error\",\n          summary: \"Error\",\n          detail: err.message,\n          life: 5000\n        });\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: Events ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n        locale: \"en-GB\" //system do 23:59  a nie 24:59\n        ,\n        eventTimeFormat: {\n          hour: \"2-digit\",\n          //2-digit, numeric\n          minute: \"2-digit\",\n          //2-digit, numeric\n          meridiem: false,\n          //lowercase, short, narrow, false (display of AM/PM)\n          hour12: false //true, false\n\n        },\n        height: \"auto\",\n        plugins: [dayGridPlugin],\n        events: Events,\n        eventClick: e => {\n          setListStorage(e.event._def.title);\n          navigate(\"/ToDoList\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          opacity: \"0.5\",\n          fontSize: \" .8rem\"\n        },\n        children: [\"*Click at event to go to details\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), \"*Events with no selected finish hours or setted for 00:00 are displayed for whole day\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Events, \"KyJzZVedGwKcXxDLXOsHu7Vv8Qo=\", false, function () {\n  return [useToastContext, useNavigate, useLocalStorage];\n});\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","FullCalendar","dayGridPlugin","useEffect","useLocalStorage","GetEvents","Spinner","useToastContext","useNavigate","Events","toastRef","navigate","moment","require","listStorage","setListStorage","setEvents","fetchData","then","res","data","map","x","title","name","date","format","id","listId","catch","err","current","show","severity","summary","detail","message","life","width","height","hour","minute","meridiem","hour12","e","event","_def","opacity","fontSize"],"sources":["C:/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/Events/Events.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\r\nimport { useEffect } from \"react\";\r\nimport \"./Events.scss\";\r\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\r\nimport { GetEvents } from \"../../../services/EventService\";\r\nimport Spinner from \"./../../../UI/Spinner\";\r\nimport { useToastContext } from \"../../../context/ToastContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction Events() {\r\n  const toastRef = useToastContext();\r\n  const navigate = useNavigate();\r\n  const moment = require(\"moment\");\r\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\r\n\r\n  const [Events, setEvents] = useState();\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      GetEvents()\r\n        .then((res) => {\r\n          setEvents(\r\n            res.data.map((x) => ({\r\n              title: x.name,\r\n              date:\r\n                moment(x.date).format(\"HH:mm:ss\") === \"00:00:00\"\r\n                  ? moment(x.date).format(\"YYYY-MM-DD\")\r\n                  : moment(x.date).format(\"YYYY-MM-DD HH:mm\"),\r\n              id: x.listId,\r\n            }))\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          toastRef.current.show({\r\n            severity: \"error\",\r\n            summary: \"Error\",\r\n            detail: err.message,\r\n            life: 5000,\r\n          });\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      {Events ? (\r\n        <>\r\n          <FullCalendar\r\n            locale={\"en-GB\"} //system do 23:59  a nie 24:59\r\n            eventTimeFormat={{\r\n              hour: \"2-digit\", //2-digit, numeric\r\n              minute: \"2-digit\", //2-digit, numeric\r\n              meridiem: false, //lowercase, short, narrow, false (display of AM/PM)\r\n              hour12: false, //true, false\r\n            }}\r\n            height={\"auto\"}\r\n            plugins={[dayGridPlugin]}\r\n            events={Events}\r\n            eventClick={(e) => {\r\n              setListStorage(e.event._def.title);\r\n              navigate(\"/ToDoList\");\r\n            }}\r\n          />\r\n          <p style={{ opacity: \"0.5\", fontSize: \" .8rem\" }}>\r\n            *Click at event to go to details\r\n            <br />\r\n            *Events with no selected finish hours or setted for 00:00 are\r\n            displayed for whole day\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}