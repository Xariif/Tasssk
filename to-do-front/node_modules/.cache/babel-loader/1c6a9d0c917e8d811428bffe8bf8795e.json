{"ast":null,"code":"var _jsxFileName = \"/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { GetListById, GetLists, GetListsNames } from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      console.log(load);\n      break;\n\n    default:\n      return state;\n  }\n};\n\nconst List = props => {\n  _s();\n\n  const toastRef = useToastContext();\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n  const [listNames, setListNames] = useState();\n  const [list, dispatch] = useReducer(reducer, \"\");\n\n  function loadData() {\n    GetListsNames().then(res => {\n      setListNames(prev => res.data);\n\n      if (res.data.find(x => x.name === listStorage)) {\n        GetListById(res.data.find(x => x.name === listStorage).id).then(res => {\n          setList(prev => res.data);\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ToDoList\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      listNames: listNames,\n      setListNames: setListNames,\n      list: list,\n      setList: setList,\n      loadData: loadData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), list && \"Lista\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"Qo0bXOUepEBOXyY0APeIl3romYg=\", false, function () {\n  return [useToastContext, useLocalStorage];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","GetListById","GetLists","GetListsNames","Table","Bar","useToastContext","Spinner","useLocalStorage","reducer","state","action","type","console","log","load","List","props","toastRef","listStorage","setListStorage","listNames","setListNames","list","dispatch","loadData","then","res","prev","data","find","x","name","id","setList"],"sources":["/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport {\n  GetListById,\n  GetLists,\n  GetListsNames,\n} from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      console.log(load);\n      break;\n    default:\n      return state;\n  }\n};\nconst List = (props) => {\n  const toastRef = useToastContext();\n\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n\n  const [listNames, setListNames] = useState();\n  const [list, dispatch] = useReducer(reducer, \"\");\n\n  function loadData() {\n    GetListsNames().then((res) => {\n      setListNames((prev) => res.data);\n\n      if (res.data.find((x) => x.name === listStorage)) {\n        GetListById(res.data.find((x) => x.name === listStorage).id).then(\n          (res) => {\n            setList((prev) => res.data);\n          }\n        );\n      }\n    });\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <div className=\"ToDoList\">\n      <Bar\n        listNames={listNames}\n        setListNames={setListNames}\n        list={list}\n        setList={setList}\n        loadData={loadData}\n      />\n\n      {list && \"Lista\"}\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,aAHF,QAIO,+BAJP;AAKA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,MAAL;MACEC,OAAO,CAACC,GAAR,CAAYC,IAAZ;MACA;;IACF;MACE,OAAOL,KAAP;EALJ;AAOD,CARD;;AASA,MAAMM,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,QAAQ,GAAGZ,eAAe,EAAhC;EAEA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCZ,eAAe,CAAC,cAAD,CAArD;EAEA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,EAA1C;EACA,MAAM,CAACyB,IAAD,EAAOC,QAAP,IAAmBxB,UAAU,CAACS,OAAD,EAAU,EAAV,CAAnC;;EAEA,SAASgB,QAAT,GAAoB;IAClBtB,aAAa,GAAGuB,IAAhB,CAAsBC,GAAD,IAAS;MAC5BL,YAAY,CAAEM,IAAD,IAAUD,GAAG,CAACE,IAAf,CAAZ;;MAEA,IAAIF,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAeC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWb,WAAhC,CAAJ,EAAkD;QAChDlB,WAAW,CAAC0B,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAeC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWb,WAAhC,EAA6Cc,EAA9C,CAAX,CAA6DP,IAA7D,CACGC,GAAD,IAAS;UACPO,OAAO,CAAEN,IAAD,IAAUD,GAAG,CAACE,IAAf,CAAP;QACD,CAHH;MAKD;IACF,CAVD;EAWD;;EAED9B,SAAS,CAAC,MAAM;IACd0B,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE,QAAC,GAAD;MACE,SAAS,EAAEJ,SADb;MAEE,YAAY,EAAEC,YAFhB;MAGE,IAAI,EAAEC,IAHR;MAIE,OAAO,EAAEW,OAJX;MAKE,QAAQ,EAAET;IALZ;MAAA;MAAA;MAAA;IAAA,QADF,EASGF,IAAI,IAAI,OATX;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAvCD;;GAAMP,I;UACaV,e,EAEqBE,e;;;KAHlCQ,I;AAyCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}