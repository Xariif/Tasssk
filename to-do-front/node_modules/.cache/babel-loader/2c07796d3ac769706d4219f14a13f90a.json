{"ast":null,"code":"var _jsxFileName = \"/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { GetListById, GetLists, GetListsNames } from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      GetListsNames().then(res => {\n        return res;\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\n\nconsole.log(listNames);\n\nconst List = props => {\n  _s();\n\n  const toastRef = useToastContext();\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n  const [listNames, dispatch] = useReducer(reducer);\n  useEffect(() => {\n    dispatch({\n      type: \"load\"\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ToDoList\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      listNames: listNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"Q4ogZNFWd2dCj5DrKIGnFmo5+Jc=\", false, function () {\n  return [useToastContext, useLocalStorage];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","GetListById","GetLists","GetListsNames","Table","Bar","useToastContext","Spinner","useLocalStorage","reducer","state","action","type","then","res","console","log","listNames","List","props","toastRef","listStorage","setListStorage","dispatch"],"sources":["/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport {\n  GetListById,\n  GetLists,\n  GetListsNames,\n} from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      GetListsNames().then((res) => {\n        return res;\n      });\n      break;\n    default:\n      return state;\n  }\n};\n\nconsole.log(listNames);\nconst List = (props) => {\n  const toastRef = useToastContext();\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n\n  const [listNames, dispatch] = useReducer(reducer);\n\n  useEffect(() => {\n    dispatch({ type: \"load\" });\n  }, []);\n\n  return (\n    <div className=\"ToDoList\">\n      <Bar listNames={listNames} />\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,aAHF,QAIO,+BAJP;AAKA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,MAAL;MACET,aAAa,GAAGU,IAAhB,CAAsBC,GAAD,IAAS;QAC5B,OAAOA,GAAP;MACD,CAFD;MAGA;;IACF;MACE,OAAOJ,KAAP;EAPJ;AASD,CAVD;;AAYAK,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,QAAQ,GAAGd,eAAe,EAAhC;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgCd,eAAe,CAAC,cAAD,CAArD;EAEA,MAAM,CAACS,SAAD,EAAYM,QAAZ,IAAwBvB,UAAU,CAACS,OAAD,CAAxC;EAEAV,SAAS,CAAC,MAAM;IACdwB,QAAQ,CAAC;MAAEX,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,uBACE,QAAC,GAAD;MAAK,SAAS,EAAEK;IAAhB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAfD;;GAAMC,I;UACaZ,e,EACqBE,e;;;KAFlCU,I;AAiBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}