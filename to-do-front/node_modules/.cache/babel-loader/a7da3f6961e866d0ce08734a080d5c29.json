{"ast":null,"code":"var _jsxFileName = \"/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { GetListById, GetLists, GetListsNames } from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  _s();\n\n  const toastRef = useToastContext();\n  const [list, setList] = useState();\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n  const [listNames, setListNames] = useState();\n  const [selectedListDropdown, setSelectedListDropdown] = useState();\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const twojaStara = e => {\n    console.log(e, listNames);\n    GetListById(listNames.find(x => x.id === e.value.id).id).then(res => {\n      setList(prev => res.data);\n    });\n    setSelectedListDropdown(listNames.find(x => x.name === e.value.name));\n    setListStorage(e.value.name);\n  };\n\n  function loadData() {\n    GetListsNames().then(res => {\n      setListNames(prev => res.data);\n\n      if (res.data.find(x => x.name === listStorage)) {\n        console.log(\"storage\", listStorage);\n        setSelectedListDropdown(res.data.find(x => x.name === listStorage));\n        GetListById(res.data.find(x => x.name === listStorage).id).then(res => setList(prev => res.data));\n      } else if (res.data.length > 0) {\n        console.log(\"000\");\n        setSelectedListDropdown(res.data[0]);\n        GetListById(res.data[0].id).then(res => setList(prev => res.data));\n      } else {\n        setSelectedListDropdown();\n        setList();\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ToDoList\",\n    children: [list.name, /*#__PURE__*/_jsxDEV(Bar, {\n      list: list,\n      setList: setList,\n      loadData: loadData,\n      twojaStara: twojaStara,\n      listNames: listNames,\n      selectedListDropdown: selectedListDropdown,\n      setSelectedListDropdown: setSelectedListDropdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), list && /*#__PURE__*/_jsxDEV(Table, {\n      list: list,\n      loadData: loadData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"MQK9TgGRsziwvCmXaqa37eoNGwA=\", false, function () {\n  return [useToastContext, useLocalStorage];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","GetListById","GetLists","GetListsNames","Table","Bar","useToastContext","Spinner","useLocalStorage","List","props","toastRef","list","setList","listStorage","setListStorage","listNames","setListNames","selectedListDropdown","setSelectedListDropdown","loadData","twojaStara","e","console","log","find","x","id","value","then","res","prev","data","name","length"],"sources":["/Users/jakub/Documents/GitHub/To-Do/to-do-front/src/components/pages/List/List.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport {\n  GetListById,\n  GetLists,\n  GetListsNames,\n} from \"../../../services/ToDoService\";\nimport Table from \"./Table/Table\";\nimport Bar from \"./Bar/Bar\";\nimport { useToastContext } from \"../../../context/ToastContext\";\nimport Spinner from \"../../../UI/Spinner\";\nimport useLocalStorage from \"../../../hooks/useLocalStorage\";\n\nconst List = (props) => {\n  const toastRef = useToastContext();\n  const [list, setList] = useState();\n  const [listStorage, setListStorage] = useLocalStorage(\"selectedList\");\n  const [listNames, setListNames] = useState();\n  const [selectedListDropdown, setSelectedListDropdown] = useState();\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const twojaStara = (e) => {\n    console.log(e, listNames);\n    GetListById(listNames.find((x) => x.id === e.value.id).id).then((res) => {\n      setList((prev) => res.data);\n    });\n    setSelectedListDropdown(listNames.find((x) => x.name === e.value.name));\n    setListStorage(e.value.name);\n  };\n\n  function loadData() {\n    GetListsNames().then((res) => {\n      setListNames((prev) => res.data);\n      if (res.data.find((x) => x.name === listStorage)) {\n        console.log(\"storage\", listStorage);\n        setSelectedListDropdown(res.data.find((x) => x.name === listStorage));\n        GetListById(res.data.find((x) => x.name === listStorage).id).then(\n          (res) => setList((prev) => res.data)\n        );\n      } else if (res.data.length > 0) {\n        console.log(\"000\");\n        setSelectedListDropdown(res.data[0]);\n        GetListById(res.data[0].id).then((res) => setList((prev) => res.data));\n      } else {\n        setSelectedListDropdown();\n        setList();\n      }\n    });\n  }\n  return (\n    <div className=\"ToDoList\">\n      {list.name}\n      <Bar\n        list={list}\n        setList={setList}\n        loadData={loadData}\n        twojaStara={twojaStara}\n        listNames={listNames}\n        selectedListDropdown={selectedListDropdown}\n        setSelectedListDropdown={setSelectedListDropdown}\n      />\n      {list && <Table list={list} loadData={loadData} />}\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,aAHF,QAIO,+BAJP;AAKA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,QAAQ,GAAGL,eAAe,EAAhC;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;EACA,MAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCP,eAAe,CAAC,cAAD,CAArD;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,EAA1C;EACA,MAAM,CAACoB,oBAAD,EAAuBC,uBAAvB,IAAkDrB,QAAQ,EAAhE;EACAC,SAAS,CAAC,MAAM;IACdqB,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMC,UAAU,GAAIC,CAAD,IAAO;IACxBC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAeN,SAAf;IACAf,WAAW,CAACe,SAAS,CAACS,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,CAAC,CAACM,KAAF,CAAQD,EAAvC,EAA2CA,EAA5C,CAAX,CAA2DE,IAA3D,CAAiEC,GAAD,IAAS;MACvEjB,OAAO,CAAEkB,IAAD,IAAUD,GAAG,CAACE,IAAf,CAAP;IACD,CAFD;IAGAb,uBAAuB,CAACH,SAAS,CAACS,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACO,IAAF,KAAWX,CAAC,CAACM,KAAF,CAAQK,IAAzC,CAAD,CAAvB;IACAlB,cAAc,CAACO,CAAC,CAACM,KAAF,CAAQK,IAAT,CAAd;EACD,CAPD;;EASA,SAASb,QAAT,GAAoB;IAClBjB,aAAa,GAAG0B,IAAhB,CAAsBC,GAAD,IAAS;MAC5Bb,YAAY,CAAEc,IAAD,IAAUD,GAAG,CAACE,IAAf,CAAZ;;MACA,IAAIF,GAAG,CAACE,IAAJ,CAASP,IAAT,CAAeC,CAAD,IAAOA,CAAC,CAACO,IAAF,KAAWnB,WAAhC,CAAJ,EAAkD;QAChDS,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,WAAvB;QACAK,uBAAuB,CAACW,GAAG,CAACE,IAAJ,CAASP,IAAT,CAAeC,CAAD,IAAOA,CAAC,CAACO,IAAF,KAAWnB,WAAhC,CAAD,CAAvB;QACAb,WAAW,CAAC6B,GAAG,CAACE,IAAJ,CAASP,IAAT,CAAeC,CAAD,IAAOA,CAAC,CAACO,IAAF,KAAWnB,WAAhC,EAA6Ca,EAA9C,CAAX,CAA6DE,IAA7D,CACGC,GAAD,IAASjB,OAAO,CAAEkB,IAAD,IAAUD,GAAG,CAACE,IAAf,CADlB;MAGD,CAND,MAMO,IAAIF,GAAG,CAACE,IAAJ,CAASE,MAAT,GAAkB,CAAtB,EAAyB;QAC9BX,OAAO,CAACC,GAAR,CAAY,KAAZ;QACAL,uBAAuB,CAACW,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAvB;QACA/B,WAAW,CAAC6B,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYL,EAAb,CAAX,CAA4BE,IAA5B,CAAkCC,GAAD,IAASjB,OAAO,CAAEkB,IAAD,IAAUD,GAAG,CAACE,IAAf,CAAjD;MACD,CAJM,MAIA;QACLb,uBAAuB;QACvBN,OAAO;MACR;IACF,CAhBD;EAiBD;;EACD,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,WACGD,IAAI,CAACqB,IADR,eAEE,QAAC,GAAD;MACE,IAAI,EAAErB,IADR;MAEE,OAAO,EAAEC,OAFX;MAGE,QAAQ,EAAEO,QAHZ;MAIE,UAAU,EAAEC,UAJd;MAKE,SAAS,EAAEL,SALb;MAME,oBAAoB,EAAEE,oBANxB;MAOE,uBAAuB,EAAEC;IAP3B;MAAA;MAAA;MAAA;IAAA,QAFF,EAWGP,IAAI,iBAAI,QAAC,KAAD;MAAO,IAAI,EAAEA,IAAb;MAAmB,QAAQ,EAAEQ;IAA7B;MAAA;MAAA;MAAA;IAAA,QAXX;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CArDD;;GAAMX,I;UACaH,e,EAEqBE,e;;;KAHlCC,I;AAuDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}